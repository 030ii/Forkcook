<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">
	<select id="orderTotalCount" resultType="int">
		select count(distinct ordernum) from orders
	</select>
	<select id="orderNowTotalCount" parameterType="int" resultType="int">
		select count(distinct ordernum) from orders 
		where snum = #{snum} and ordertype = 'A' and orderstate != 4
	</select>
	<select id="orderReserveTotalCount" parameterType="int" resultType="int">
		select count(distinct ordernum) from orders
		where snum = #{snum} and ordertype = 'B' and orderstate != 4
	</select>
	<select id="orderFinishTotalCount" parameterType="int" resultType="int">
		select count(distinct ordernum) from orders
		where snum = #{snum} and orderstate = 4
	</select>
	<insert id="orderInsert">
	
	</insert>
	<update id="orderUpdate">
		
	</update>
	<update id="orderUpdateState2" parameterType="String"><!-- 2:조리중 -->
		update orders set orderstate = 2 where ordernum = #{ordernum,jdbcType=VARCHAR}
	</update>
	<update id="orderUpdateState3" parameterType="String"><!-- 3:조리완료 -->
		update orders set orderstate = 3 where ordernum = #{ordernum,jdbcType=VARCHAR}
	</update>
	<update id="orderUpdateState4" parameterType="String"><!-- 4:전달완료 -->
		update orders set orderstate = 4 where ordernum = #{ordernum,jdbcType=VARCHAR}
	</update>
	<update id="orderUpdateState7" parameterType="String"><!-- 7:사용자 취소됨 -->
		update orders set orderstate = 7 where ordernum = #{ordernum,jdbcType=VARCHAR}
	</update>
	<update id="orderUpdateState8" parameterType="String"><!-- 8:가맹점 취소됨 -->
		update orders set orderstate = 8 where ordernum = #{ordernum,jdbcType=VARCHAR}
	</update>
	<select id="orderList" resultType="odto">
		select distinct o.ordernum, u.name as uname, u.phone as uphone, o.snum, s.name as sname, o.ordertype, o.orderdate, o.orderstate, g.totalprice	
		from orders o, users u, store s, (select o.ordernum, sum(o.mtotalprice) as totalprice from orders o group by o.ordernum) g
		where o.unum = u.num and o.snum = s.num and o.ordernum = g.ordernum order by o.orderdate desc
	</select>
	<select id="orderListData" parameterType="String" resultType="odto">
		select distinct o.ordernum, u.name as uname, u.phone as uphone, s.name as sname, o.ordertype, o.orderdate, o.orderstate, g.totalcount, g.totalprice	
		from orders o, users u, store s, (select o.ordernum, sum(o.mcount) as totalcount, sum(o.mtotalprice) as totalprice from orders o group by o.ordernum) g
		where o.unum = u.num and o.snum = s.num and o.ordernum = g.ordernum and o.ordernum = #{ordernum,jdbcType=VARCHAR}
	</select>
	<select id="orderMenuData" parameterType="String" resultType="odto">
		select m.name as mname, o.mcount, o.mtotalprice 
		from orders o, menu m
		where o.mnum = m.num and o.ordernum = #{ordernum,jdbcType=VARCHAR}
	</select>
	<delete id="orderDelete" parameterType="String">
		delete from orders where ordernum = #{ordernum,jdbcType=VARCHAR}
	</delete>
</mapper>